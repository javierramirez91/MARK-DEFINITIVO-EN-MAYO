# Render Blueprint for Mark Assistant
# This file defines the services to be deployed on Render

services:
  # API Principal
  - type: web
    name: mark-api
    env: python
    buildCommand: pip install -r requirements.txt
    startCommand: python main.py
    envVars:
      - key: ENVIRONMENT
        value: production
      - key: HOST
        value: 0.0.0.0
      - key: PORT
        value: 10000
      - key: SECRET_KEY
        generateValue: true
      - key: ENCRYPTION_KEY
        generateValue: true
      - key: ENCRYPTION_SALT
        generateValue: true
      # Variables de Supabase (necesitarás configurarlas manualmente)
      - key: SUPABASE_URL
        sync: false
      - key: SUPABASE_KEY
        sync: false
      # Variables de WhatsApp (necesitarás configurarlas manualmente)
      - key: WHATSAPP_TOKEN
        sync: false
      - key: WHATSAPP_PHONE_NUMBER_ID
        sync: false
      - key: WHATSAPP_VERIFY_TOKEN
        sync: false
      # Variables de Stripe (necesitarás configurarlas manualmente)
      - key: STRIPE_SECRET_KEY
        sync: false
      - key: STRIPE_WEBHOOK_SECRET
        sync: false
      # Variables de Calendly (necesitarás configurarlas manualmente)
      - key: CALENDLY_ACCESS_TOKEN
        sync: false
      # Variables de Zoom (necesitarás configurarlas manualmente)
      - key: ZOOM_ACCOUNT_ID
        sync: false
      - key: ZOOM_CLIENT_ID
        sync: false
      - key: ZOOM_CLIENT_SECRET
        sync: false

  # Panel de Administración
  - type: web
    name: mark-admin
    env: python
    buildCommand: pip install -r requirements.txt
    startCommand: python -m uvicorn admin.admin_panel:app --host 0.0.0.0 --port 10000
    envVars:
      - key: ENVIRONMENT
        value: production
      - key: HOST
        value: 0.0.0.0
      - key: ADMIN_PORT
        value: 10000
      - key: SECRET_KEY
        generateValue: true
      - key: ENCRYPTION_KEY
        generateValue: true
      - key: ENCRYPTION_SALT
        generateValue: true
      # Variables de Supabase (necesitarás configurarlas manualmente)
      - key: SUPABASE_URL
        sync: false
      - key: SUPABASE_KEY
        sync: false

# Base de datos: Usamos Supabase PostgreSQL en lugar de Cloudflare D1
# No es necesario configurar un servicio de base de datos adicional en Render
# Las variables de conexión a Supabase ya están configuradas en las variables de entorno

# Database service (optional - use if not using Cloudflare D1)
#  - type: pserv
#    name: mark-database
#    env: docker
#    region: frankfurt
#    plan: standard
#    image:
#      url: postgres:14-alpine
#    disk:
#      name: mark-db-data
#      mountPath: /var/lib/postgresql/data
#      sizeGB: 10
#    envVars:
#      - key: POSTGRES_USER
#        sync: false
#      - key: POSTGRES_PASSWORD
#        sync: false
#      - key: POSTGRES_DB
#        value: mark_assistant 

# Temporarily commenting out the cron section to isolate the issue
# Top-level Cron Jobs for maintenance
# cron:
#   jobs:
#     - schedule: "0 2 * * *"  # Run daily at 2 AM
#       command: "python -m scripts.backup_database --output /data/backups/database_$(date +%Y%m%d).bak"
#       serviceName: mark-assistant  # Specify which service runs the command
#     - schedule: "0 3 * * *"  # Run daily at 3 AM
#       command: "python -m scripts.backup_encryption_keys --output /data/backups/encryption_keys_$(date +%Y%m%d).zip"
#       serviceName: mark-assistant
#     - schedule: "0 4 * * *"  # Run daily at 4 AM
#       command: "python -m scripts.check_key_rotation"
#       serviceName: mark-assistant
#     - schedule: "0 5 * * *"  # Run daily at 5 AM
#       command: "python -m scripts.verify_security"
#       serviceName: mark-assistant
#     - schedule: "0 */6 * * *"  # Run every 6 hours
#       command: "python -m scripts.clean_temp_files"
#       serviceName: mark-assistant 