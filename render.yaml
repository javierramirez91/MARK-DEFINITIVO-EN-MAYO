# Render Blueprint for Mark Assistant
# This file defines the services to be deployed on Render

services:
  # API Principal
  - type: web
    name: mark-api
    env: python
    buildCommand: pip install -r requirements.txt
    startCommand: python main.py
    envVars:
      # Variables obligatorias (Render genera automáticamente)
      - key: SECRET_KEY
        generateValue: true
      - key: ENCRYPTION_KEY
        generateValue: true
      - key: ENCRYPTION_SALT
        generateValue: true
      
      # Configuración de producción
      - key: ENVIRONMENT
        value: production
      - key: DEBUG
        value: false
      - key: LOG_LEVEL
        value: INFO
      - key: HOST
        value: 0.0.0.0
      - key: PORT
        value: 10000
      
      # Supabase (Base de Datos)
      - key: SUPABASE_URL
        sync: false
      - key: SUPABASE_KEY
        sync: false
      - key: SUPABASE_SERVICE_KEY
        sync: false
      
      # WhatsApp / Meta
      - key: WHATSAPP_TOKEN
        sync: false
      - key: WHATSAPP_PHONE_NUMBER_ID
        sync: false
      - key: WHATSAPP_VERIFY_TOKEN
        sync: false
      - key: WHATSAPP_APP_SECRET
        sync: false
      
      # OpenRouter / IA
      - key: OPENROUTER_API_KEY
        sync: false
      - key: OPENROUTER_MODEL
        value: meta-llama/llama-3.1-8b-instruct:free
      - key: OPENROUTER_HTTP_REFERER
        sync: false
      
      # Stripe (Pagos)
      - key: STRIPE_SECRET_KEY
        sync: false
      - key: STRIPE_WEBHOOK_SECRET
        sync: false
      - key: STRIPE_PRICE_ID_STANDARD
        sync: false
      - key: STRIPE_PRICE_ID_REDUCIDA
        sync: false
      - key: STRIPE_PRICE_ID_PAREJA
        sync: false
      - key: STRIPE_PRICE_ID_CANCELLATION
        sync: false
      - key: STRIPE_LINK_SUCCESS
        sync: false
      - key: STRIPE_LINK_CANCEL
        sync: false
      
      # Calendly
      - key: CALENDLY_ACCESS_TOKEN
        sync: false
      - key: CALENDLY_USER_URI
        sync: false
      - key: CALENDLY_WEBHOOK_URL
        sync: false
      
      # Zoom
      - key: ZOOM_ACCOUNT_ID
        sync: false
      - key: ZOOM_CLIENT_ID
        sync: false
      - key: ZOOM_CLIENT_SECRET
        sync: false
      
      # Contacto de emergencia
      - key: EMERGENCY_CONTACT
        sync: false
      
      # Configuración regional
      - key: SUPPORTED_LANGUAGES
        value: '["es","ca","en","ar"]'
      - key: DEFAULT_LANGUAGE
        value: es
      
      # Información del centro
      - key: CENTER_NAME
        value: Centro de Psicologia Jaume I
      - key: CENTER_ADDRESS
        value: Gran Via Jaume I, 41-43, Entresol 1a, 17001, Girona, España
      - key: CENTER_EMAIL
        value: info@centrepsicologiajaumeprimer.com
      - key: CENTER_WEBSITE
        value: https://centrepsicologiajaume1.com

  # Panel de Administración
  - type: web
    name: mark-admin
    env: python
    buildCommand: pip install -r requirements.txt
    startCommand: python -m uvicorn admin.admin_panel:app --host 0.0.0.0 --port $PORT
    envVars:
      # Variables obligatorias (Render genera automáticamente)
      - key: SECRET_KEY
        generateValue: true
      - key: ENCRYPTION_KEY
        generateValue: true
      - key: ENCRYPTION_SALT
        generateValue: true
      
      # Configuración de producción
      - key: ENVIRONMENT
        value: production
      - key: DEBUG
        value: false
      - key: LOG_LEVEL
        value: INFO
      - key: HOST
        value: 0.0.0.0
      - key: PORT
        value: 10000
      
      # Supabase (Base de Datos)
      - key: SUPABASE_URL
        sync: false
      - key: SUPABASE_KEY
        sync: false
      - key: SUPABASE_SERVICE_KEY
        sync: false
      
      # Configuración regional
      - key: SUPPORTED_LANGUAGES
        value: '["es","ca","en","ar"]'
      - key: DEFAULT_LANGUAGE
        value: es
      
      # Información del centro
      - key: CENTER_NAME
        value: Centro de Psicologia Jaume I
      - key: CENTER_EMAIL
        value: info@centrepsicologiajaumeprimer.com
      - key: CENTER_WEBSITE
        value: https://centrepsicologiajaume1.com

# Base de datos: Usamos Supabase PostgreSQL en lugar de Cloudflare D1
# No es necesario configurar un servicio de base de datos adicional en Render
# Las variables de conexión a Supabase ya están configuradas en las variables de entorno

# Database service (optional - use if not using Cloudflare D1)
#  - type: pserv
#    name: mark-database
#    env: docker
#    region: frankfurt
#    plan: standard
#    image:
#      url: postgres:14-alpine
#    disk:
#      name: mark-db-data
#      mountPath: /var/lib/postgresql/data
#      sizeGB: 10
#    envVars:
#      - key: POSTGRES_USER
#        sync: false
#      - key: POSTGRES_PASSWORD
#        sync: false
#      - key: POSTGRES_DB
#        value: mark_assistant 

# Cron Jobs para mantenimiento y backups
cron:
  jobs:
    - name: backup-database
      schedule: "0 2 * * *"  # Diario a las 2:00 AM UTC
      serviceName: mark-api
      command: "python -m scripts.backup_database --output ./backups/database_$(date +\%Y\%m\%d_\%H\%M\%S).bak"
    - name: backup-keys
      schedule: "0 3 * * *"  # Diario a las 3:00 AM UTC
      serviceName: mark-api
      command: "python -m scripts.backup_encryption_keys --output ./backups/encryption_keys_$(date +\%Y\%m\%d_\%H\%M\%S).json"
    # Puedes añadir más cron jobs aquí si es necesario
    # Ejemplo: Limpieza de sesiones expiradas (si no se hace en otro lado)
    # - name: cleanup-sessions
    #   schedule: "0 1 * * *" # Diario a la 1:00 AM UTC
    #   serviceName: mark-api
    #   command: "# Aquí iría el comando para llamar al endpoint /admin/cleanup_sessions"
    #   # Nota: Los cron jobs de Render ejecutan comandos shell. Para llamar a un endpoint HTTP,
    #   # necesitarías usar curl o una herramienta similar, e incluir la INTERNAL_API_KEY.
    #   # Ejemplo con curl (requiere que curl esté disponible en el entorno):
    #   # command: "curl -X POST \"${RENDER_SERVICE_URL}/api/admin/cleanup_sessions?api_key=${INTERNAL_API_KEY}\"" 